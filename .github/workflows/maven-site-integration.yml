name: Maven Site &n Peformance & Integration Tests

on:
  push:
    branches:
      - '**'
  schedule:
    - cron: '0 18-23/2 * * *'  # 20:00â€“01:00 CET
    - cron: '0 0-6/2 * * *'    # 02:00â€“08:00 CET
  # POST https://api.github.com/repos/dipina/SpringBootLibrary/actions/workflows/maven-site-integration.yml/dispatches  
  workflow_dispatch:
    

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: libraryapidb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL..."
          until mysqladmin ping -h 127.0.0.1 -uroot -proot --silent; do
            sleep 2
          done

      - name: Run DB initialization script
        run: |
          echo "Running DB setup..."
          mysql -h 127.0.0.1 -uroot -proot < src/main/resources/dbsetup.sql

      - name: Run Integration Tests
        run: mvn -Pintegration integration-test

      - name: Run Performance Tests
        run: mvn -Pperformance integration-test

      - name: Install Doxygen
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz

      - name: Generate Maven Site
        run: mvn site
      
      - name: Copy site doxygen output to docs folder
        run: |
          mkdir -p docs
          rm -rf docs/site
          mkdir -p docs/site
          cp -r target/site/* docs/site/
          cp -r target/reports/* docs/site/reports/
          rm -rf docs/doxygen
          mkdir -p docs/doxygen
          cp -r target/doxygen/html/* docs/doxygen/

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs
          branch: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}
